openapi: 3.0.3
info:
  title: On-Counter Billing System API
  version: 1.0.0
  description: API for managing products, customers, and bills in an on-counter billing
    system.
paths:
  /api/bills/:
    post:
      operationId: api_bills_create
      summary: Create a new bill
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bill'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
          description: ''
  /api/bills/{id}/:
    get:
      operationId: api_bills_retrieve
      description: Retrieve details of a bill.
      summary: Retrieve a bill details
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
          description: ''
    put:
      operationId: api_bills_update
      description: Update details of a bill.
      summary: Update a bill
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bill'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
          description: ''
    delete:
      operationId: api_bills_destroy
      description: Delete a bill.
      summary: Delete a bill
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/customers/:
    get:
      operationId: api_customers_list
      description: Retrieve a list of all customers.
      summary: List all customers or create a new one
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
    post:
      operationId: api_customers_create
      description: Create a new customer.
      summary: Create a new customer
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/customers/{id}/:
    get:
      operationId: api_customers_retrieve
      description: Retrieve details of a customer.
      summary: Retrieve a customer details
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: api_customers_update
      description: Update details of a customer.
      summary: Update a customer
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: api_customers_destroy
      description: Delete a customer.
      summary: Delete a customer
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      description: Authenticate user and generate token.
      summary: User Login
      tags:
      - api
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          properties:
            schema:
              username:
                type: string
              password:
                type: string
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /api/logout/:
    post:
      operationId: api_logout_create
      description: Logout user and delete token.
      summary: User Logout
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: ''
  /api/products/:
    get:
      operationId: api_products_list
      description: Retrieve a list of all products.
      summary: List all products or create a new one
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: api_products_create
      description: Create a new product.
      summary: Create a new product
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Bill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer'
          readOnly: true
        employee:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        items:
          type: array
          items:
            $ref: '#/components/schemas/BillItem'
      required:
      - created_at
      - customer
      - employee
      - id
      - items
      - total_amount
    BillItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
      required:
      - id
      - price
      - product
      - quantity
    Customer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        phone_number:
          type: string
          maxLength: 15
      required:
      - id
      - name
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - id
      - name
      - price
      - stock
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 50
      required:
      - id
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
